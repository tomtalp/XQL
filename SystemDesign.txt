=================
====== XQL ======
=================

Last updated - 27/03/2015

--------------------------
-- Project requirements --
--------------------------

XQL transforms any Excel file into an actual RDBMS, with SQL capabilities!
Once the user picks an Excel file, the file can be queried via SQL just like a regular database.
The Excel file is treated as the database, and every sheet is respectively treated as a table in the DB.

XQL makes data analysis operations on large Excel files with multiple sheets much easier!


------------------
-- Technologies --
------------------

1. Python as the main language.
2. SQLite as the temporary DB. (via the Python 'sqlite3' standard lib module)
3. PyQt for the GUI (should support out of the box a GUI creation for Windows, Mac & Linux)
4. 'xlrd' module for reading .xls & xlsx files
5. 'xlwt' for writing .xls files, and 'XlsxWriter' for writing .xlsx files


--------------------------
-- General architecture --
--------------------------

1. When the user launches XQL, the main screen offers him to browse his computer for an Excel file (either .xls or .xlsx)

2. Once a file is selected, XQL creates an sqlite database on the users computer, in a temporary folder. (The moment the application is closed, this temp db will be deleted!)
During this process the user sees a buffer on his screen, indicating that XQL is working on setting things up.
This process should be as quick as possible, to make the creation of the database transparent to the user.

3. When the aforementioned database is created, the main screen shows a textbox for the queries, a sidebar showing the tables (sheets) in the database (excel), and a table showing the query results.

4. The tables (sheets) shown in the sidebar should be clickable. Once clicked, the user will see all the columns & their type in the table.

5. When the user closes the application, the temporary SQLite DB has to be erased from the users system! (*What do we do if app crashes?! We might end up leaving unwanted files on the users system)


---------------------------
-- Things for the future --
---------------------------

1. Allow working with multiple Excel files during the same session
2. Executing create, update & insert queries. (basically - editing the Excel file from XQL)







